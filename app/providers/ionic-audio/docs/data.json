{
    "project": {},
    "files": {
        "ionic-audio.d.ts": {
            "name": "ionic-audio.d.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "ionic-audio.ts": {
            "name": "ionic-audio.ts",
            "modules": {
                "ionic-audio": 1
            },
            "classes": {
                "AudioProvider": 1,
                "WebAudioProvider": 1,
                "AudioTrack": 1,
                "CordovaAudioTrack": 1,
                "AudioTrackComponent": 1,
                "AudioTrackPlayComponent": 1,
                "AudioTimePipe": 1,
                "AudioTrackProgressComponent": 1,
                "AudioTrackProgressBarComponent": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ionic-audio": {
            "name": "ionic-audio",
            "submodules": {},
            "elements": {
                "audio-track": 1,
                "audio-track-play": 1,
                "audio-track-progress": 1,
                "audio-track-progress-bar": 1
            },
            "classes": {
                "AudioProvider": 1,
                "WebAudioProvider": 1,
                "AudioTrack": 1,
                "CordovaAudioTrack": 1,
                "AudioTrackComponent": 1,
                "AudioTrackPlayComponent": 1,
                "AudioTimePipe": 1,
                "AudioTrackProgressComponent": 1,
                "AudioTrackProgressBarComponent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "ionic-audio.ts",
            "line": 909,
            "description": "An audio player for Ionic 2 and Angular 2"
        }
    },
    "classes": {
        "AudioProvider": {
            "name": "AudioProvider",
            "shortname": "AudioProvider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 20,
            "description": "Base class for audio providers",
            "export": "",
            "abstract": "",
            "implements": "{IAudioProvider}"
        },
        "WebAudioProvider": {
            "name": "WebAudioProvider",
            "shortname": "WebAudioProvider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 140,
            "description": "Creates an HTML5 audio provider",
            "export": "",
            "is_constructor": 1,
            "extends": "{AudioProvider}"
        },
        "AudioTrack": {
            "name": "AudioTrack",
            "shortname": "AudioTrack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 165,
            "description": "Creates an HTML5 audio track",
            "export": "",
            "is_constructor": 1,
            "implements": "{IAudioTrack}"
        },
        "CordovaAudioTrack": {
            "name": "CordovaAudioTrack",
            "shortname": "CordovaAudioTrack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 407,
            "description": "Cordova Media audio track",
            "export": "",
            "is_constructor": 1,
            "implements": "{IAudioTrack}"
        },
        "AudioTrackComponent": {
            "name": "AudioTrackComponent",
            "shortname": "AudioTrackComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 614,
            "description": "# ```<audio-track>``` \n\nCreates a top level audio-track component\n\n## Usage\n\n````\n  <audio-track #audio [track]=\"myTrack\" (onFinish)=\"onTrackFinished($event)\">\n  ...\n  </audio-track>\n````",
            "export": ""
        },
        "AudioTrackPlayComponent": {
            "name": "AudioTrackPlayComponent",
            "shortname": "AudioTrackPlayComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 763,
            "description": "# ```<audio-track-play>``` \n\nRenders a play/pause button that optionally displays a loading spinner\n\n## Usage\n````\n<audio-track #audio [track]=\"myTrack\" (onFinish)=\"onTrackFinished($event)\">\n <ion-item>  \n   <audio-track-play item-left [audioTrack]=\"audio\"><ion-spinner></ion-spinner></audio-track-play>\n   <h3>{{audio.title}}</h3>\n </ion-item>    \n</audio-track>\n````\nIf placed within a ```<ion-thumnbail>``` component it will render as a semi-transparent button layover (see live demo). \nPassing a ```<ion-spinner>``` as a child element will display a loading spinner while loading.\n\n````\n<audio-track #audio [track]=\"track\" (onFinish)=\"onTrackFinished($event)\">\n  <ion-item>  \n      <ion-thumbnail item-left>\n        <img src=\"{{audio.art}}\">\n        <audio-track-play dark [audioTrack]=\"audio\"><ion-spinner></ion-spinner></audio-track-play>  \n      </ion-thumbnail>\n      <p><strong>{{audio.title}}</strong></p>\n  </ion-item>    \n</audio-track>\n````",
            "parents": "audio-track",
            "export": ""
        },
        "AudioTimePipe": {
            "name": "AudioTimePipe",
            "shortname": "AudioTimePipe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 853,
            "description": "A pipe to convert milliseconds to a string representation",
            "export": "",
            "implements": "{PipeTransform}"
        },
        "AudioTrackProgressComponent": {
            "name": "AudioTrackProgressComponent",
            "shortname": "AudioTrackProgressComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 879,
            "description": "# ```<audio-track-progress>``` \n\nRenders a timer component displaying track progress and duration \n\n## Usage\n````\n<audio-track-progress [audioTrack]=\"track\"></audio-track-progress>\n````",
            "parents": "audio-track",
            "export": ""
        },
        "AudioTrackProgressBarComponent": {
            "name": "AudioTrackProgressBarComponent",
            "shortname": "AudioTrackProgressBarComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ionic-audio",
            "namespace": "",
            "file": "ionic-audio.ts",
            "line": 909,
            "description": "# ```<audio-track-progress-bar>```\n\nRenders a progress bar with optional timer, duration and progress indicator that allow seeking\n\n## Usage\n````\n <audio-track-progress-bar dark duration progress [audioTrack]=\"audio\"></audio-track-progress-bar>\n````",
            "parents": "audio-track",
            "export": ""
        }
    },
    "elements": {
        "audio-track": {
            "name": "audio-track",
            "attributes": [],
            "module": "ionic-audio",
            "file": "ionic-audio.ts",
            "line": 614,
            "description": "# ```<audio-track>``` \n\nCreates a top level audio-track component\n\n## Usage\n\n````\n  <audio-track #audio [track]=\"myTrack\" (onFinish)=\"onTrackFinished($event)\">\n  ...\n  </audio-track>\n````",
            "export": ""
        },
        "audio-track-play": {
            "name": "audio-track-play",
            "attributes": [],
            "module": "ionic-audio",
            "file": "ionic-audio.ts",
            "line": 763,
            "description": "# ```<audio-track-play>``` \n\nRenders a play/pause button that optionally displays a loading spinner\n\n## Usage\n````\n<audio-track #audio [track]=\"myTrack\" (onFinish)=\"onTrackFinished($event)\">\n <ion-item>  \n   <audio-track-play item-left [audioTrack]=\"audio\"><ion-spinner></ion-spinner></audio-track-play>\n   <h3>{{audio.title}}</h3>\n </ion-item>    \n</audio-track>\n````\nIf placed within a ```<ion-thumnbail>``` component it will render as a semi-transparent button layover (see live demo). \nPassing a ```<ion-spinner>``` as a child element will display a loading spinner while loading.\n\n````\n<audio-track #audio [track]=\"track\" (onFinish)=\"onTrackFinished($event)\">\n  <ion-item>  \n      <ion-thumbnail item-left>\n        <img src=\"{{audio.art}}\">\n        <audio-track-play dark [audioTrack]=\"audio\"><ion-spinner></ion-spinner></audio-track-play>  \n      </ion-thumbnail>\n      <p><strong>{{audio.title}}</strong></p>\n  </ion-item>    \n</audio-track>\n````",
            "parents": "audio-track",
            "export": ""
        },
        "audio-track-progress": {
            "name": "audio-track-progress",
            "attributes": [],
            "module": "ionic-audio",
            "file": "ionic-audio.ts",
            "line": 879,
            "description": "# ```<audio-track-progress>``` \n\nRenders a timer component displaying track progress and duration \n\n## Usage\n````\n<audio-track-progress [audioTrack]=\"track\"></audio-track-progress>\n````",
            "parents": "audio-track",
            "export": ""
        },
        "audio-track-progress-bar": {
            "name": "audio-track-progress-bar",
            "attributes": [],
            "module": "ionic-audio",
            "file": "ionic-audio.ts",
            "line": 909,
            "description": "# ```<audio-track-progress-bar>```\n\nRenders a progress bar with optional timer, duration and progress indicator that allow seeking\n\n## Usage\n````\n <audio-track-progress-bar dark duration progress [audioTrack]=\"audio\"></audio-track-progress-bar>\n````",
            "parents": "audio-track",
            "export": ""
        }
    },
    "classitems": [
        {
            "file": "ionic-audio.d.ts",
            "line": 2,
            "description": "Defines the audio provider contract",
            "export": "",
            "interface": "IAudioProvider",
            "class": "AudioProvider"
        },
        {
            "file": "ionic-audio.d.ts",
            "line": 19,
            "description": "Defines the properties for JSON objects representing tracks to be played",
            "export": "",
            "interface": "ITrackConstraint",
            "class": "AudioProvider"
        },
        {
            "file": "ionic-audio.d.ts",
            "line": 34,
            "description": "Defines the audio track contract",
            "export": "",
            "interface": "IAudioTrack",
            "extends": "{ITrackConstraint}",
            "class": "AudioProvider"
        },
        {
            "file": "ionic-audio.ts",
            "line": 33,
            "description": "Creates an audio provider based on the environment.\nIf running from within a browser, then defaults to HTML5 Audio. If running on a device, it will check for Cordova and Media plugins and use\na native audio player, otherwise falls back to HTML5 audio.",
            "itemtype": "method",
            "name": "factory",
            "static": 1,
            "return": {
                "description": "An IAudioProvider instance",
                "type": "IAudioProvider"
            },
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 49,
            "description": "Creates an IAudioTrack instance from a JSON object.\nNot implemented in base class.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "track",
                    "description": "A JSON object containing at least a src property",
                    "type": "ITrackConstraint"
                }
            ],
            "return": {
                "description": "null"
            },
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 61,
            "description": "Adds an existing IAudioTrack instance to the array of managed tracks.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "audioTrack",
                    "description": "An instance of IAudioTrack",
                    "type": "IAudioTrack"
                }
            ],
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 71,
            "description": "Plays a given track.",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "index",
                    "description": "The track id",
                    "type": "Number"
                }
            ],
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 83,
            "description": "Pauses a given track.",
            "itemtype": "method",
            "name": "pause",
            "params": [
                {
                    "name": "index",
                    "description": "The track id, or if undefined it will pause whichever track currently playing",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 95,
            "description": "Stops a given track.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "index",
                    "description": "The track id, or if undefined it will stop whichever track currently playing",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 108,
            "description": "Gets an array of tracks managed by this provider",
            "itemtype": "property",
            "name": "tracks",
            "readonly": "",
            "type": "{IAudioTrack[]}",
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 119,
            "description": "Gets current track id",
            "itemtype": "property",
            "name": "current",
            "type": "{number}",
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 129,
            "description": "Sets current track id",
            "itemtype": "property",
            "name": "current",
            "class": "AudioProvider",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 240,
            "description": "Gets the track id",
            "itemtype": "property",
            "name": "id",
            "type": "{number}",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 250,
            "description": "Sets the track id",
            "itemtype": "property",
            "name": "id",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 259,
            "description": "Gets the track duration, or -1 if it cannot be determined",
            "itemtype": "property",
            "name": "duration",
            "readonly": "",
            "type": "{number}",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 270,
            "description": "Gets current track time (progress)",
            "itemtype": "property",
            "name": "progress",
            "readonly": "",
            "type": "{number}",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 281,
            "description": "Gets current track progress as a percentage",
            "itemtype": "property",
            "name": "completed",
            "readonly": "",
            "type": "{number}",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 292,
            "description": "Gets any errors logged by HTML5 audio",
            "itemtype": "property",
            "name": "error",
            "readonly": "",
            "type": "{MediaError}",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 303,
            "description": "Gets a boolean value indicating whether the current source can be played",
            "itemtype": "property",
            "name": "canPlay",
            "readonly": "",
            "type": "{boolean}",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 316,
            "description": "Gets a boolean value indicating whether the track is in loading state",
            "itemtype": "property",
            "name": "isLoading",
            "readonly": "",
            "type": "{boolean}",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 328,
            "description": "Gets a boolean value indicating whether the track has finished loading",
            "itemtype": "property",
            "name": "hadLoaded",
            "readonly": "",
            "type": "{boolean}",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 340,
            "description": "Plays current track",
            "itemtype": "method",
            "name": "play",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 360,
            "description": "Pauses current track",
            "itemtype": "method",
            "name": "pause",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 372,
            "description": "Stops current track",
            "itemtype": "method",
            "name": "stop",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 386,
            "description": "Seeks to a new position within the track",
            "itemtype": "method",
            "name": "seekTo",
            "params": [
                {
                    "name": "time",
                    "description": "the new position to seek to",
                    "type": "Number"
                }
            ],
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 396,
            "description": "Destroys this track instance",
            "itemtype": "method",
            "name": "destroy",
            "class": "AudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 466,
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 468,
            "description": "Gets the track id",
            "itemtype": "property",
            "name": "id",
            "type": "{number}",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 478,
            "description": "Sets the track id",
            "itemtype": "property",
            "name": "id",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 487,
            "description": "Gets the track duration, or -1 if it cannot be determined",
            "itemtype": "property",
            "name": "duration",
            "readonly": "",
            "type": "{number}",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 498,
            "description": "Gets current track time (progress)",
            "itemtype": "property",
            "name": "progress",
            "readonly": "",
            "type": "{number}",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 509,
            "description": "Gets current track progress as a percentage",
            "itemtype": "property",
            "name": "completed",
            "readonly": "",
            "type": "{number}",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 520,
            "description": "Gets any errors logged by HTML5 audio",
            "itemtype": "property",
            "name": "error",
            "readonly": "",
            "type": "{MediaError}",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 531,
            "description": "Gets a boolean value indicating whether the current source can be played",
            "itemtype": "property",
            "name": "canPlay",
            "readonly": "",
            "type": "{boolean}",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 542,
            "description": "Gets a boolean value indicating whether the track is in loading state",
            "itemtype": "property",
            "name": "isLoading",
            "readonly": "",
            "type": "{boolean}",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 553,
            "description": "Gets a boolean value indicating whether the track has finished loading",
            "itemtype": "property",
            "name": "hadLoaded",
            "readonly": "",
            "type": "{boolean}",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 564,
            "description": "Plays current track",
            "itemtype": "method",
            "name": "play",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 574,
            "description": "Pauses current track",
            "itemtype": "method",
            "name": "pause",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 584,
            "description": "Stops current track",
            "itemtype": "method",
            "name": "stop",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 594,
            "description": "Seeks to a new position within the track",
            "itemtype": "method",
            "name": "seekTo",
            "params": [
                {
                    "name": "time",
                    "description": "the new position to seek to",
                    "type": "Number"
                }
            ],
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 604,
            "description": "Destroys this track instance",
            "itemtype": "method",
            "name": "destroy",
            "class": "CordovaAudioTrack",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 636,
            "description": "Input property containing a JSON object with at least a src property\n````\n  this.myTrack = {\n    src: 'https://www,mysite.com/myTrack.mp3',\n    artist: 'Artist name',\n    title: '...',\n    art: 'img/artist.jpg',\n    preload: 'metadata' // tell the plugin to preload metadata such as duration for this track\n  };\n````",
            "itemtype": "property",
            "name": "track",
            "type": "{ITrackConstraint}",
            "class": "AudioTrackComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 652,
            "description": "Output property expects an event handler to be notified whenever playback finishes",
            "itemtype": "property",
            "name": "onFinish",
            "type": "{EventEmitter}",
            "class": "AudioTrackComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 812,
            "description": "The AudioTrackComponent parent instance created by ```<audio-track>```",
            "itemtype": "property",
            "name": "@Input() audioTrack",
            "type": "{IAudioTrack}",
            "class": "AudioTrackPlayComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 820,
            "description": "Renders the component using the light theme",
            "itemtype": "property",
            "name": "@Input() light",
            "type": "{boolean}",
            "class": "AudioTrackPlayComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 831,
            "description": "Renders the component using the dark theme",
            "itemtype": "property",
            "name": "@Input() dark",
            "type": "{boolean}",
            "class": "AudioTrackPlayComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 863,
            "description": "Transforms milliseconds to hh:mm:ss",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "value",
                    "description": "The milliseconds",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "hh:mm:ss",
                "type": "String"
            },
            "class": "AudioTimePipe",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 900,
            "description": "The AudioTrackComponent parent instance created by ```<audio-track>```",
            "itemtype": "property",
            "name": "@Input() audioTrack",
            "type": "{IAudioTrack}",
            "class": "AudioTrackProgressComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 934,
            "description": "The AudioTrackComponent parent instance created by ```<audio-track>```",
            "itemtype": "property",
            "name": "@Input() audioTrack",
            "type": "{IAudioTrack}",
            "class": "AudioTrackProgressBarComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 949,
            "description": "Input property indicating whether to display track progress",
            "itemtype": "property",
            "name": "@Input() progress",
            "type": "{boolean}",
            "class": "AudioTrackProgressBarComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 960,
            "description": "Input property indicating whether to display track duration",
            "itemtype": "property",
            "name": "@Input() duration",
            "type": "{boolean}",
            "class": "AudioTrackProgressBarComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 971,
            "description": "Renders the component using the light theme",
            "itemtype": "property",
            "name": "@Input() light",
            "type": "{boolean}",
            "class": "AudioTrackProgressBarComponent",
            "module": "ionic-audio"
        },
        {
            "file": "ionic-audio.ts",
            "line": 982,
            "description": "Renders the component using the dark theme",
            "itemtype": "property",
            "name": "@Input() dark",
            "type": "{boolean}",
            "class": "AudioTrackProgressBarComponent",
            "module": "ionic-audio"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.d.ts:2"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.d.ts:19"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.d.ts:34"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:20"
        },
        {
            "message": "unknown tag: abstract",
            "line": " ionic-audio.ts:20"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:140"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:165"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:407"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:614"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:763"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:853"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:879"
        },
        {
            "message": "unknown tag: export",
            "line": " ionic-audio.ts:909"
        },
        {
            "message": "Missing item type\nDefines the audio provider contract",
            "line": " ionic-audio.d.ts:2"
        },
        {
            "message": "Missing item type\nDefines the properties for JSON objects representing tracks to be played",
            "line": " ionic-audio.d.ts:19"
        },
        {
            "message": "Missing item type\nDefines the audio track contract",
            "line": " ionic-audio.d.ts:34"
        },
        {
            "message": "Missing item type",
            "line": " ionic-audio.ts:466"
        }
    ]
}