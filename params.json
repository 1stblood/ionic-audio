{"name":"Ionic-audio","tagline":"An audio player for Ionic based on the Cordova Media Plugin","body":"# ionic-audio\r\nThis module creates an audio player UI for Ionic. It is basically a facade to the cordova-media plugin and provides an Angular service and set of directives to create an audio player. The UI takes care of displaying track information, progress bar(s) and loading spinners and it keeps all in sync. The underlying service will also interface with the Media API and handle media creation/playback/pause/stop events.  \r\n\r\nIt is possible to customize the look and feel by providing a template as shown in the demo below and the example project included.\r\n\r\n__NOTE: This has been tested on :__\r\n\r\n+ Android 5.1\r\n+ Android 4.1.2\r\n+ Android 4.1.2 w/ Crosswalk (much better UI performance)\r\n+ iOS (reported by users) \r\n\r\n__iOS feedback wanted!__\r\n\r\n## Demo\r\nYou need a real device to test audio playback but these demos can be used to tweak the UI. You can also run the example\r\nprojects locally with `ionic serve` if you prefer.\r\n\r\n1. [List audio tracks with a global progress bar] (http://codepen.io/arielfaur/full/JddevO/)\r\n\r\n2. [List independent audio tracks with embedded progress bar] (http://codepen.io/arielfaur/full/rVVQKy/)\r\n\r\n## Usage\r\n\r\n### Install dependencies\r\n\r\n[Cordova media plugin]\r\n(https://github.com/apache/cordova-plugin-media)\r\n\r\n`ionic plugin add org.apache.cordova.media`\r\n\r\n### Install this module using bower\r\n\r\n`bower install ionic-audio`\r\n\r\nThere's a sample Ionic project in the folder `example-audio`. The project contains not platforms, so you must add\r\none and make a build if you want to test it on your device.\r\nKeep in mind that the module depends on a Cordova plugin so the module won't run locally with `ionic serve`.\r\nHowever, you can still run the project locally to tune the UI before deploying to the device.\r\n\r\n### Include JS file\r\n\r\n`<script src=\"dist/ion-audio.js\"></script>`\r\n\r\n### Inject the dependency in your app's module\r\n\r\n`angular.module('starter', ['ionic', 'starter.controllers', 'starter.services', 'ionic-audio'])`\r\n\r\n### Define your player UI using directives as in the follow example\r\n\r\n```\r\n<ion-view view-title=\"Music\">\r\n  <ion-content>\r\n      <ion-audio-track track=\"track\">\r\n          <div class=\"list list-inset\">\r\n              <div class=\"item item-thumbnail-left\">\r\n                  <img src=\"{{track.art}}\">\r\n                  <h2>{{track.title}}</h2>\r\n                  <p>{{track.artist}}</p>\r\n                  <ion-audio-controls>\r\n                        <a class=\"button button-icon icon\" ion-audio-play></a>\r\n                        <ion-spinner icon=\"ios\"></ion-spinner>\r\n                    </ion-audio-controls>\r\n              </div>\r\n              <div class=\"item\">\r\n                <ion-audio-progress-bar display-time></ion-audio-progress-bar>\r\n              </div>\r\n          </div>\r\n      </ion-audio-track>\r\n  </ion-content>\r\n</ion-view>\r\n```\r\n\r\n## Directives\r\n\r\n### ion-audio-track\r\nCreates an audio track from a JSON object passed as parameter using the `track` attribute. The player UI is defined inside the body of\r\n `ion-audio-track`. Supports multiple instances per view, each one being completely\r\nindependent.\r\n\r\n```\r\n<ion-audio-track track=\"myTrack\">\r\n...\r\n</ion-audio-track>\r\n```\r\n\r\nThen in your controller:\r\n```\r\n$scope.myTrack = {\r\n    url: 'https://www.example.com/my_song.mp3',\r\n    artist: 'Somebody',\r\n    title: 'Song name',\r\n    art: 'img/album_art.jpg'\r\n}\r\n```\r\n\r\n### ion-audio-controls\r\nContainer for `ion-audio-play` and `ion-spinner` directives. The spinner is automatically hidden/shown when needed.\r\n\r\n### ion-audio-play\r\nDisplays play/pause/loading status. Simply apply this attribute to an `a` or `button` element. It updates the UI accordingly and shows a spinner\r\nwhile the track is loading.\r\nAdditionally, the attributes `text-play` and `text-pause` may be used to include a label for each status.\r\n\r\n`<a class=\"button button-icon icon\" ion-audio-play></a>`\r\n\r\n`<button class=\"button icon-left\" ion-audio-play text-play=\"Play\" text-pause=\"Pause\"></button>`\r\n\r\n### ion-audio-progress-bar\r\nShows a progress bar using Ionic's range control. It also displays the track duration and progress update if\r\nthe `display-time` attribute is present.\r\n\r\n`<ion-audio-progress-bar display-time></ion-audio-progress-bar>`\r\n\r\nSample use case: tracks listed with an embedded progress bar.\r\n\r\n![](https://github.com/arielfaur/ionic-audio/raw/master/screenshots/Screenshot_progress_bar.png)\r\n\r\n\r\n#### Use as a global progress bar\r\nIf a `ion-audio-progress-bar` is placed outside the scope of `ion-audio-track`, it will automatically behave as a standalone bar keeping in sync with the track list. Add a `display-info` attribute to show the current playing track.\r\n\r\n`<ion-audio-progress-bar display-time display-info></ion-audio-progress-bar>`\r\n\r\nSample use case: tracks listed with a global progress bar.\r\n\r\n![](https://github.com/arielfaur/ionic-audio/raw/master/screenshots/Screenshot_progress_box.png)\r\n\r\n## TODO\r\n+ Test on iOS\r\n+ Implement playlist functionality\r\n+ ~~Implement seek-to functionality using the slider~~\r\n+ ~~Implement customization of progress bar and default player icons - now hardcoded~~\r\n+ Replace Ionic range control with SVG to show track progress instead (maybe?)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}